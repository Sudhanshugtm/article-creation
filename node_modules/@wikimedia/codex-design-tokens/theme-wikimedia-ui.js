
// Codex Design Tokens v2.2.0
// Design System for Wikimedia
// See https://doc.wikimedia.org/codex/latest/design-tokens/overview.html

export const cdxColorBase = "#202122";
export const cdxColorBaseFixed = "#202122";
export const cdxColorBaseHover = "#404244";
export const cdxColorEmphasized = "#101418";
export const cdxColorSubtle = "#54595d";
export const cdxColorPlaceholder = "#72777d";
export const cdxColorDisabled = "#a2a9b1";
export const cdxColorDisabledEmphasized = "#a2a9b1";
export const cdxColorInverted = "#fff";
export const cdxColorInvertedFixed = "#fff"; // The same as color-inverted in light mode, but does not change in dark mode. Use this for things that should be white in both modes.
export const cdxColorProgressive = "#36c"; // 'Progressive' Color and states
export const cdxColorProgressiveHover = "#3056a9";
export const cdxColorProgressiveActive = "#233566";
export const cdxColorProgressiveFocus = "#36c";
export const cdxColorDestructive = "#bf3c2c"; // 'Destructive' Color and states
export const cdxColorDestructiveHover = "#9f3526";
export const cdxColorDestructiveActive = "#612419";
export const cdxColorDestructiveFocus = "#36c";
export const cdxColorVisited = "#6a60b0"; // 'Visited' color. In combination with progressive. Used for default links.
export const cdxColorVisitedHover = "#534fa3";
export const cdxColorVisitedActive = "#353262";
export const cdxColorDestructiveVisited = "#9f5555"; // Red link 'Visited' color. Used for visited red links.
export const cdxColorDestructiveVisitedHover = "#854848";
export const cdxColorDestructiveVisitedActive = "#512e2e";
export const cdxColorError = "#bf3c2c";
export const cdxColorErrorHover = "#9f3526";
export const cdxColorErrorActive = "#612419";
export const cdxColorWarning = "#886425";
export const cdxColorSuccess = "#177860";
export const cdxColorNotice = "#404244";
export const cdxColorIconError = "#f54739";
export const cdxColorIconWarning = "#ab7f2a";
export const cdxColorIconSuccess = "#099979";
export const cdxColorIconNotice = "#72777d";
export const cdxColorContentAdded = "#006400";
export const cdxColorContentRemoved = "#8b0000";
export const cdxColorLinkRed = "#bf3c2c"; // Red ('new') Link color and states
export const cdxColorLinkRedHover = "#9f3526";
export const cdxColorLinkRedActive = "#612419";
export const cdxColorLinkRedFocus = "#36c";
export const cdxColorLinkRedVisited = "#9f5555";
export const cdxColorLinkRedVisitedHover = "#854848";
export const cdxColorLinkRedVisitedActive = "#512e2e";
export const cdxOpacityBase = "1";
export const cdxOpacityMedium = "0.65";
export const cdxOpacityLow = "0.3";
export const cdxOpacityTransparent = "0";
export const cdxFilterInvertIcon = "0";
export const cdxFilterInvertPrimaryButtonIcon = "1";
export const cdxBackgroundPositionBase = "center";
export const cdxBackgroundSizeSearchFigure = "cover"; // Use in TypeaheadSearch and Thumbnail components for the thumb container.
export const cdxZIndexBottom = "-100"; // Use descriptive `z-index` tokens for layout purposes.
export const cdxZIndexBase = "0";
export const cdxZIndexAboveContent = "1";
export const cdxZIndexToolbar = "2";
export const cdxZIndexDropdown = "50";
export const cdxZIndexSticky = "100";
export const cdxZIndexFixed = "200";
export const cdxZIndexOffCanvasBackdrop = "300";
export const cdxZIndexOffCanvas = "350";
export const cdxZIndexOverlayBackdrop = "400";
export const cdxZIndexOverlay = "450";
export const cdxZIndexPopover = "700";
export const cdxZIndexTooltip = "800";
export const cdxZIndexToastNotification = "900";
export const cdxZIndexTop = "9999";
export const cdxZIndexStacking0 = "0"; // Use stacking-specific z-index tokens inside components to layer individual elements.
export const cdxZIndexStacking1 = "1";
export const cdxZIndexStacking2 = "2";
export const cdxZIndexStacking3 = "3";
export const cdxBoxSizingBase = "border-box";
export const cdxSize0 = "0";
export const cdxSize6 = "0.0625rem";
export const cdxSize12 = "0.125rem";
export const cdxSize25 = "0.25rem";
export const cdxSize50 = "0.5rem";
export const cdxSize75 = "0.75rem";
export const cdxSize100 = "1rem";
export const cdxSize125 = "1.25rem";
export const cdxSize150 = "1.5rem";
export const cdxSize200 = "2rem";
export const cdxSize250 = "2.5rem";
export const cdxSize275 = "2.75rem";
export const cdxSize300 = "3rem";
export const cdxSize400 = "4rem";
export const cdxSize800 = "8rem";
export const cdxSize1200 = "12rem";
export const cdxSize1600 = "16rem";
export const cdxSize2400 = "24rem";
export const cdxSize2800 = "28rem";
export const cdxSize3200 = "32rem";
export const cdxSize4000 = "40rem";
export const cdxSize5600 = "56rem";
export const cdxSizeViewportWidthFull = "100vw";
export const cdxSizeViewportHeightFull = "100vh";
export const cdxSizeAbsolute1 = "1px";
export const cdxSizeAbsolute9999 = "9999px";
export const cdxSizeContentMin = "min-content";
export const cdxSizeContentFit = "fit-content";
export const cdxSizeContentMax = "max-content";
export const cdxSizeThird = "33.33%";
export const cdxSizeHalf = "50%";
export const cdxSizeFull = "100%";
export const cdxSizeDouble = "200%";
export const cdxSizeSearchFigure = "2.5rem"; // Alias for use in TypeaheadSearch and Thumbnail components for the same purpose and for better code readability.
export const cdxSizeIconXSmall = "calc( 1rem - 4px )";
export const cdxSizeIconSmall = "1rem";
export const cdxSizeIconMedium = "calc( 1rem + 4px )";
export const cdxSizeToggleSwitchGrip = "calc( 1rem * 1.25 )";
export const cdxMaxWidthBase = "none";
export const cdxMaxWidthBreakpointMobile = "calc( 640px - 1px )"; // A mobile device's maximum available screen width. Many older feature phones have screens smaller than this value.
export const cdxMaxWidthBreakpointTablet = "calc( 1120px - 1px )"; // A tablet device's maximum available screen width. Note, the size chosen is eager to be re-evaluated with Web team and Product Analytics.
export const cdxMaxWidthBreakpointDesktop = "calc( 1680px - 1px )"; // A desktop device's maximum available screen width.
export const cdxMaxWidthButton = "28rem"; // Note, that this is a slight amendment from WikimediaUI Base from `28.75em` = `460px` to `448px` – `dimension.2800`
export const cdxBorderStyleBase = "solid";
export const cdxBorderStyleDashed = "dashed";
export const cdxBoxShadowSmall = "0 0 0 1px #a2a9b1";
export const cdxBoxShadowSmallTop = "0 -1px 0 0 #a2a9b1";
export const cdxBoxShadowSmallBottom = "0 1px 0 0 #a2a9b1";
export const cdxBoxShadowMedium = "0 4px 4px 0 rgba( 0, 0, 0, 0.06 ), 0 0 8px 0 rgba( 0, 0, 0, 0.06 )";
export const cdxBoxShadowLarge = "0 4px 8px 0 rgba( 0, 0, 0, 0.06 ), 0 0 16px 0 rgba( 0, 0, 0, 0.06 )";
export const cdxBoxShadowInsetSmall = "inset 0 0 0 1px";
export const cdxBoxShadowInsetMedium = "inset 0 0 0 2px";
export const cdxBoxShadowInsetMediumVertical = "inset 0 -2px 0 0";
export const cdxBoxShadowOutsetSmall = "0 0 0 1px";
export const cdxBoxShadowOutsetSmallTop = "0 -1px 0 0";
export const cdxBoxShadowOutsetSmallBottom = "0 1px 0 0";
export const cdxBoxShadowOutsetSmallStart = "-1px 0 0 0";
export const cdxBoxShadowOutsetMediumBelow = "0 4px 4px 0";
export const cdxBoxShadowOutsetMediumAround = "0 0 8px 0";
export const cdxBoxShadowOutsetLargeBelow = "0 4px 8px 0";
export const cdxBoxShadowOutsetLargeAround = "0 0 16px 0";
export const cdxBoxShadowColorBase = "#a2a9b1";
export const cdxBoxShadowColorProgressiveActive = "#233566";
export const cdxBoxShadowColorProgressiveFocus = "#36c";
export const cdxBoxShadowColorProgressiveSelected = "#36c";
export const cdxBoxShadowColorProgressiveSelectedHover = "#3056a9";
export const cdxBoxShadowColorProgressiveSelectedActive = "#233566";
export const cdxBoxShadowColorDestructiveFocus = "#36c";
export const cdxBoxShadowColorInverted = "#fff";
export const cdxBoxShadowColorAlphaBase = "rgba( 0, 0, 0, 0.06 )";
export const cdxBoxShadowColorTransparent = "transparent";
export const cdxFontFamilyBase = "sans-serif"; // Reference Vector's default fallback sans instead of the deprecated value `font-family-sans` in WikimediaUI Base.
export const cdxFontFamilySystemSans = "-apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Inter', 'Helvetica', 'Arial', sans-serif";
export const cdxFontFamilySansFallback = "sans-serif";
export const cdxFontFamilySerif = "'Linux Libertine', 'Georgia', 'Times', 'Source Serif Pro', serif";
export const cdxFontFamilySerifFallback = "serif";
export const cdxFontFamilyMonospace = "'Menlo', 'Consolas', 'Liberation Mono', 'Fira Code', 'Courier New', monospace";
export const cdxFontFamilyMonospaceFallback = "monospace, monospace";
export const cdxFontFamilyHeadingMain = "'Linux Libertine', 'Georgia', 'Times', 'Source Serif Pro', serif"; // Legacy value from WikimediaUI Base. Use for first heading special treatment.
export const cdxFontSizeXSmall = "0.75rem"; // `x` stands for extra. In this case extra small.
export const cdxFontSizeSmall = "0.875rem";
export const cdxFontSizeMedium = "1rem";
export const cdxFontSizeLarge = "1.125rem";
export const cdxFontSizeXLarge = "1.25rem";
export const cdxFontSizeXxLarge = "1.5rem";
export const cdxFontSizeXxxLarge = "1.75rem";
export const cdxFontWeightHairline = "100";
export const cdxFontWeightLight = "300";
export const cdxFontWeightNormal = "400";
export const cdxFontWeightSemiBold = "600";
export const cdxFontWeightBold = "700";
export const cdxLineHeightXSmall = "1.25rem"; // `x` stands for extra. In this case extra small.
export const cdxLineHeightSmall = "1.375rem";
export const cdxLineHeightMedium = "1.625rem";
export const cdxLineHeightLarge = "1.75rem";
export const cdxLineHeightXLarge = "1.875rem";
export const cdxLineHeightXxLarge = "2.125rem";
export const cdxLineHeightXxxLarge = "2.375rem";
export const cdxLineHeightContent = "1.625"; // Intended for user-generated content that comes from outside of the design system. Components and features should use the standard font-size and line-height tokens instead.
export const cdxTextDecorationNone = "none";
export const cdxTextDecorationLineThrough = "line-through";
export const cdxTextDecorationUnderline = "underline";
export const cdxTextOverflowClip = "clip";
export const cdxTextOverflowEllipsis = "ellipsis";
export const cdxTabSizeBase = "4";
export const cdxTransformCheckboxTickChecked = "rotate( 45deg )";
export const cdxTransformProgressIndicatorSpinnerStart = "rotate( -45deg )";
export const cdxTransformProgressIndicatorSpinnerEnd = "rotate( 315deg )";
export const cdxTransitionDurationBase = "100ms";
export const cdxTransitionDurationMedium = "250ms";
export const cdxTransitionPropertyBase = "background-color, color, border-color, box-shadow";
export const cdxTransitionPropertyFade = "opacity";
export const cdxTransitionPropertyIcon = "color";
export const cdxTransitionPropertyIconCssOnly = "background-color";
export const cdxTransitionPropertyToggleSwitchGrip = "background-color, border-color, transform";
export const cdxTransitionTimingFunctionSystem = "ease";
export const cdxTransitionTimingFunctionUser = "ease-out";
export const cdxAnimationDelayNone = "0ms";
export const cdxAnimationDelayMedium = "-160ms";
export const cdxAnimationDelaySlow = "-320ms";
export const cdxAnimationDurationFast = "1000ms";
export const cdxAnimationDurationMedium = "1600ms";
export const cdxAnimationDurationSlow = "2000ms";
export const cdxAnimationTimingFunctionBase = "linear";
export const cdxAnimationTimingFunctionBouncing = "ease-in-out";
export const cdxAnimationIterationCountBase = "infinite";
export const cdxCursorBase = "default";
export const cdxCursorBaseDisabled = "default";
export const cdxCursorBaseHover = "pointer";
export const cdxCursorGrab = "grab";
export const cdxCursorGrabbing = "grabbing";
export const cdxCursorHelp = "help";
export const cdxCursorMove = "move";
export const cdxCursorNotAllowed = "not-allowed";
export const cdxCursorResizeNesw = "nesw-resize";
export const cdxCursorResizeNwse = "nwse-resize";
export const cdxCursorText = "text";
export const cdxCursorZoomIn = "zoom-in";
export const cdxCursorZoomOut = "zoom-out";
export const cdxMixBlendModeBase = "normal";
export const cdxMixBlendModeBlend = "multiply";
export const cdxAccentColorBase = "#36c";
export const cdxBackgroundColorBase = "#fff"; // Background Colors for static elements (for page layout, sections, etc.) from here on.
export const cdxBackgroundColorBaseFixed = "#fff"; // The same as background-color-base in light mode, but does not change in dark mode. Use this for things that should be white in both modes.
export const cdxBackgroundColorNeutral = "#eaecf0";
export const cdxBackgroundColorNeutralSubtle = "#f8f9fa";
export const cdxBackgroundColorInteractive = "#eaecf0";
export const cdxBackgroundColorInteractiveHover = "#dadde3";
export const cdxBackgroundColorInteractiveActive = "#c8ccd1";
export const cdxBackgroundColorInteractiveSubtle = "#f8f9fa";
export const cdxBackgroundColorInteractiveSubtleHover = "#eaecf0";
export const cdxBackgroundColorInteractiveSubtleActive = "#dadde3";
export const cdxBackgroundColorDisabled = "#dadde3"; // Components like Buttons, Checkboxes, Radios, ProgressBars….
export const cdxBackgroundColorDisabledSubtle = "#eaecf0"; // Components like TextInputs, Selects….
export const cdxBackgroundColorInverted = "#101418";
export const cdxBackgroundColorProgressive = "#36c";
export const cdxBackgroundColorProgressiveHover = "#3056a9";
export const cdxBackgroundColorProgressiveActive = "#233566";
export const cdxBackgroundColorProgressiveFocus = "#36c";
export const cdxBackgroundColorProgressiveSubtle = "#f1f4fd";
export const cdxBackgroundColorProgressiveSubtleHover = "#dce3f9";
export const cdxBackgroundColorProgressiveSubtleActive = "#cbd6f6";
export const cdxBackgroundColorDestructive = "#bf3c2c";
export const cdxBackgroundColorDestructiveHover = "#9f3526";
export const cdxBackgroundColorDestructiveActive = "#612419";
export const cdxBackgroundColorDestructiveFocus = "#36c";
export const cdxBackgroundColorDestructiveSubtle = "#ffe9e5";
export const cdxBackgroundColorDestructiveSubtleHover = "#ffdad3";
export const cdxBackgroundColorDestructiveSubtleActive = "#ffc8bd";
export const cdxBackgroundColorError = "#f54739";
export const cdxBackgroundColorErrorHover = "#d74032";
export const cdxBackgroundColorErrorActive = "#bf3c2c";
export const cdxBackgroundColorErrorSubtle = "#ffe9e5";
export const cdxBackgroundColorErrorSubtleHover = "#ffdad3";
export const cdxBackgroundColorErrorSubtleActive = "#ffc8bd";
export const cdxBackgroundColorWarningSubtle = "#fdf2d5";
export const cdxBackgroundColorSuccessSubtle = "#dff2eb";
export const cdxBackgroundColorNoticeSubtle = "#eaecf0";
export const cdxBackgroundColorContentAdded = "#a3d3ff";
export const cdxBackgroundColorContentRemoved = "#ffe49c";
export const cdxBackgroundColorTransparent = "transparent";
export const cdxBackgroundColorBackdropLight = "rgba( 255, 255, 255, 0.65 )"; // Backdrop is the term used by CSS Fullscreen API and is used to dim the background when a modal Dialog is open. Also known as overlay mask.
export const cdxBackgroundColorBackdropDark = "rgba( 0, 0, 0, 0.65 )";
export const cdxBackgroundColorButtonQuietHover = "rgba( 0, 24, 73, 0.027 )";
export const cdxBackgroundColorButtonQuietActive = "rgba( 0, 24, 73, 0.082 )";
export const cdxBackgroundColorInputBinaryChecked = "#36c";
export const cdxBackgroundColorTabListItemFramedHover = "rgba( 255, 255, 255, 0.3 )";
export const cdxBackgroundColorTabListItemFramedActive = "rgba( 255, 255, 255, 0.65 )";
export const cdxOpacityIconBase = "0.87";
export const cdxOpacityIconBaseHover = "0.74";
export const cdxOpacityIconBaseSelected = "1";
export const cdxOpacityIconBaseDisabled = "0.51";
export const cdxOpacityIconPlaceholder = "0.51";
export const cdxOpacityIconSubtle = "0.67";
export const cdxMinSizeInteractivePointer = "32px";
export const cdxMinSizeInteractiveTouch = "44px";
export const cdxMinSizeSearchFigure = "40px"; // Alias for use in TypeaheadSearch and Thumbnail components for the same purpose and for better code readability.
export const cdxMinSizeIconXSmall = "10px";
export const cdxMinSizeIconSmall = "14px";
export const cdxMinSizeIconMedium = "18px";
export const cdxMinSizeInputBinary = "20px";
export const cdxMinSizeToggleSwitchGrip = "18px";
export const cdxMinWidthMedium = "256px";
export const cdxMinWidthBreakpointMobile = "320px"; // A mobile device's minimum available screen width. Many older feature phones have screens smaller than this value.
export const cdxMinWidthBreakpointTablet = "640px"; // A tablet device's minimum available screen width. Note: the size chosen is eager to be re-evaluated with Web team and Product Analytics.
export const cdxMinWidthBreakpointDesktop = "1120px"; // A desktop device's minimum available screen width.
export const cdxMinWidthBreakpointDesktopWide = "1680px"; // A wider desktop's minimum available screen width.
export const cdxMinWidthToggleSwitch = "42px";
export const cdxPositionOffsetBorderWidthBase = "-1px";
export const cdxSpacing0 = "0";
export const cdxSpacing6 = "1px";
export const cdxSpacing12 = "2px";
export const cdxSpacing25 = "4px";
export const cdxSpacing30 = "5px"; // This token is an exception to the scale.  Used as vertical `padding` in inputs and controls to achieve the default 32px component height.
export const cdxSpacing35 = "6px"; // This token is an exception to the scale.  Used as `padding` of the ToggleSwitch component.
export const cdxSpacing50 = "8px";
export const cdxSpacing65 = "10px";
export const cdxSpacing75 = "12px";
export const cdxSpacing100 = "16px";
export const cdxSpacing125 = "20px";
export const cdxSpacing150 = "24px";
export const cdxSpacing200 = "32px";
export const cdxSpacing250 = "40px";
export const cdxSpacing300 = "48px";
export const cdxSpacing400 = "64px";
export const cdxSpacingHalf = "50%"; // From here on, spacing tokens which are used for positioning values.
export const cdxSpacingFull = "100%";
export const cdxSpacingHorizontalButton = "12px - 1px"; // Padding should equal 12px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonIconOnly = "6px - 1px"; // Padding should equal 6px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonSmallIconOnly = "2px - 1px"; // Padding should equal 2px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonSmall = "6px - 1px"; // Padding should equal 6px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonLarge = "16px - 1px"; // Padding should equal 16px of spacing minus the width of the border
export const cdxSpacingHorizontalInputTextTwoEndIcons = "calc( 8px * 2 + 1rem )"; // Rely on `calc()` to make token output usable in all formats. When there are two end icons, (i.e. a clear icon and an end icon), we need to double the horizontal padding and account for the size of the extra icon. This token can be used to calculate the horizontal position of the clear icon and the padding-end of the text input.
export const cdxSpacingStartTypeaheadSearchFigure = "12px"; // The amount of space between the TypeaheadSearch figure's parent component and the TypeaheadSearch figure (input icon container, search result thumbnail, and footer icon container). We want this space to be uniform so that the figures vertically line up nicely. We use the same horizontal padding as the MenuItem.
export const cdxSpacingStartTypeaheadSearchIcon = "calc( 12px + ( 40px - 18px ) / 2 )"; // The padding required for the icon to center align with the menu item thumbnail. We calculate the difference in size and add it to the expected spacing.
export const cdxSpacingTypeaheadSearchFocusAddition = "calc( ( 12px + 40px ) - ( 18px + 8px ) )"; // The amount the width of the input increases when it is focused to allow for the extra spacing around the search figures. The caret position should remain static. This calculates the padding-left of the input when expanded minus the padding-left of the input when not expanded. (Note that both padding values actually include `@spacing-50` as well, but it was left out of the calculation for simplicity's sake.)
export const cdxSpacingToggleSwitchGripStart = "calc( 1rem * 0.375 )";
export const cdxSpacingToggleSwitchGripEnd = "calc( 1rem * 1.25 )";
export const cdxBorderWidthBase = "1px";
export const cdxBorderWidthThick = "2px";
export const cdxBorderWidthInputRadioChecked = "6px";
export const cdxBorderColorBase = "#a2a9b1";
export const cdxBorderColorEmphasized = "#202122";
export const cdxBorderColorSubtle = "#c8ccd1";
export const cdxBorderColorMuted = "#dadde3";
export const cdxBorderColorInteractive = "#72777d";
export const cdxBorderColorInteractiveHover = "#27292d";
export const cdxBorderColorInteractiveActive = "#202122";
export const cdxBorderColorDisabled = "#c8ccd1";
export const cdxBorderColorInverted = "#fff";
export const cdxBorderColorInvertedFixed = "#fff"; // The same as color-inverted in light mode, but does not change in dark mode. Use this for things that should be white in both modes.
export const cdxBorderColorProgressive = "#6485d1";
export const cdxBorderColorProgressiveHover = "#3056a9";
export const cdxBorderColorProgressiveActive = "#233566";
export const cdxBorderColorProgressiveFocus = "#36c";
export const cdxBorderColorDestructive = "#f54739";
export const cdxBorderColorDestructiveHover = "#9f3526";
export const cdxBorderColorDestructiveActive = "#612419";
export const cdxBorderColorDestructiveFocus = "#36c";
export const cdxBorderColorError = "#f54739";
export const cdxBorderColorErrorHover = "#9f3526";
export const cdxBorderColorErrorActive = "#612419";
export const cdxBorderColorWarning = "#ab7f2a";
export const cdxBorderColorSuccess = "#099979";
export const cdxBorderColorNotice = "#72777d";
export const cdxBorderColorContentAdded = "#a3d3ff";
export const cdxBorderColorContentRemoved = "#ffe49c";
export const cdxBorderColorTransparent = "transparent";
export const cdxBorderColorDivider = "#a2a9b1";
export const cdxBorderColorInputHover = "#72777d";
export const cdxBorderColorInputBinary = "#72777d";
export const cdxBorderColorInputBinaryHover = "#3056a9";
export const cdxBorderColorInputBinaryActive = "#233566";
export const cdxBorderColorInputBinaryFocus = "#36c";
export const cdxBorderColorInputBinaryChecked = "#6485d1";
export const cdxBorderBase = "1px solid #a2a9b1";
export const cdxBorderSubtle = "1px solid #c8ccd1";
export const cdxBorderProgressive = "1px solid #6485d1";
export const cdxBorderDestructive = "1px solid #f54739";
export const cdxBorderRadiusBase = "2px";
export const cdxBorderRadiusSharp = "0";
export const cdxBorderRadiusPill = "9999px";
export const cdxBorderRadiusCircle = "50%"; // Use `50%` for circle or ellipsis. See https://stackoverflow.com/a/29966500
export const cdxOutlineBaseFocus = "1px solid transparent"; // Enable Windows high contrast mode on certain widgets, that have default outlines overridden.
export const cdxOutlineColorProgressiveFocus = "#36c"; // Use in places where no more customized focus styles are provided, for example on generic `:focus`.
export const cdxWidthToggleSwitch = "calc( 1rem * 3 )";
export const cdxMinHeightTextArea = "64px";
export const cdxMinHeightTableHeader = "40px";
export const cdxMinHeightTableFooter = "40px";
export const cdxMinHeightToggleSwitch = "28px";
export const cdxHeightToggleSwitch = "calc( 1rem * 2 )";

// DEPRECATED TOKENS
// Warning: the following token name is deprecated (Use `color-subtle` instead. Note, that `color-subtle` is using `color.gray600` instead of `color.gray500` now.)
export const cdxColorBaseSubtle = "#54595d";
// Warning: the following token name is deprecated (Shadow shorthands should be used in place of `drop` shadows.)
export const cdxBoxShadowDropSmall = "0 0 0 1px #a2a9b1";
// Warning: the following token name is deprecated (Shadow shorthands should be used in place of `drop` shadows.)
export const cdxBoxShadowDropMedium = "0 4px 4px 0 rgba( 0, 0, 0, 0.06 ), 0 0 8px 0 rgba( 0, 0, 0, 0.06 )";
// Warning: the following token name is deprecated (For elements which previously used `xx-large`, consider using `large` instead, or referring to the guidance above to best choose the appropriate shadow.)
export const cdxBoxShadowDropXxLarge = "0 20px 48px 0 rgba( 0, 0, 0, 0.2 )";
// Warning: the following token name is deprecated (Use `font-family-sans--fallback` instead. See T247166.)
export const cdxFontFamilySans = "'Helvetica Neue', 'Helvetica', 'Liberation Sans', 'Arial', sans-serif";
// Warning: the following token name is deprecated (Use `line-height-x-small` instead. Deprecated, part of old font-size/line-height system)
export const cdxLineHeightXxxSmall = "1.4285714rem";
// Warning: the following token name is deprecated (Use `line-height-small` instead. Deprecated, part of old font-size/line-height system)
export const cdxLineHeightXxSmall = "1.5714285rem";