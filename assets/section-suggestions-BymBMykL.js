var a=Object.defineProperty;var g=(c,t,e)=>t in c?a(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var i=(c,t,e)=>g(c,typeof t!="symbol"?t+"":t,e);import"./modulepreload-polyfill-B5Qt9EMX.js";import{W as d}from"./WikidataEnhancementService-DbWP4Spv.js";/* empty css              */class r{constructor(){i(this,"applyButton");i(this,"clearButton");i(this,"selectedSuggestions",new Set);i(this,"wikidataService");i(this,"isLoading",!1);i(this,"handleApplyClick",()=>{this.applySuggestions()});i(this,"handleClearClick",()=>{this.clearSelections()});i(this,"handleFactCheckboxChange",t=>{const e=t.target,s=e.dataset.fact;e.checked?this.selectedSuggestions.add(`fact-${s}`):this.selectedSuggestions.delete(`fact-${s}`),this.updateActionButtons()});i(this,"handleSectionButtonClick",t=>{const e=t.currentTarget,s=e.closest(".suggestion-item--section"),n=s.dataset.section,o=`section-${n}`;console.log(`Section clicked: ${n}, ID: ${o}`),console.log("Currently selected:",Array.from(this.selectedSuggestions)),this.selectedSuggestions.has(o)?(console.log(`Deselecting ${o}`),this.selectedSuggestions.delete(o),e.classList.remove("selected"),s.classList.remove("selected")):(console.log(`Selecting ${o}`),this.selectedSuggestions.add(o),e.classList.add("selected"),s.classList.add("selected")),console.log(`New selection count: ${this.selectedSuggestions.size}`),console.log(`Button has selected class: ${e.classList.contains("selected")}`),this.updateActionButtons()});this.applyButton=document.getElementById("applyButton"),this.clearButton=document.getElementById("clearButton"),this.wikidataService=new d,console.log("Suggestions manager initialized - using static article-specific suggestions"),this.prefetchWikidataSuggestions().catch(()=>{})}updateSuggestionCount(t){const e=document.getElementById("suggestionCount");e&&(e.textContent=`${t} ideas`)}initializeEventListeners(){this.initializeFactCheckboxes(),this.initializeSectionButtons(),this.applyButton&&(this.applyButton.removeEventListener("click",this.handleApplyClick),this.applyButton.addEventListener("click",this.handleApplyClick)),this.clearButton&&(this.clearButton.removeEventListener("click",this.handleClearClick),this.clearButton.addEventListener("click",this.handleClearClick))}async prefetchWikidataSuggestions(){try{const t=sessionStorage.getItem("selectedArticle");if(!t)return;const e=JSON.parse(t),s=(e==null?void 0:e.wikipediaTitle)||(e==null?void 0:e.title);if(!s)return;const n=await this.wikidataService.fetchEntityByWikipediaTitle(s),o=n==null?void 0:n.id;if(!o)return;const l=await this.wikidataService.getEnhancementSuggestions("",o);sessionStorage.setItem("wikidataSuggestions",JSON.stringify(l)),console.log("Prefetched Wikidata suggestions for",s,"→",l.length)}catch(t){console.warn("Prefetch Wikidata failed:",t)}}initializeFactCheckboxes(){const t=document.querySelectorAll(".suggestion-item__checkbox");console.log(`Initializing ${t.length} fact checkboxes`),t.forEach(e=>{e.removeEventListener("change",this.handleFactCheckboxChange),e.addEventListener("change",this.handleFactCheckboxChange)})}initializeSectionButtons(){const t=document.querySelectorAll(".suggestion-item__add-btn");console.log(`Initializing ${t.length} section buttons`),t.forEach((e,s)=>{const n=e.closest(".suggestion-item--section"),o=n==null?void 0:n.getAttribute("data-section");console.log(`Button ${s}: section-${o}`),e.removeEventListener("click",this.handleSectionButtonClick),e.addEventListener("click",this.handleSectionButtonClick)})}updateActionButtons(){console.log(`updateActionButtons called with count: ${this.selectedSuggestions.size}`);const t=this.selectedSuggestions.size;if(!this.applyButton){console.error("Apply button not found!");return}this.applyButton.disabled=t===0;const e=document.getElementById("selectionCount"),s=document.getElementById("pluralS");if(!e||!s){console.error("Selection count elements not found!",{selectionCount:!!e,pluralS:!!s});return}e.textContent=t.toString(),s.style.display=t===1?"none":"inline",console.log(`Updated UI: count=${t}, buttonDisabled=${this.applyButton.disabled}`)}clearSelections(){document.querySelectorAll(".suggestion-item__checkbox").forEach(n=>{n.checked=!1}),document.querySelectorAll(".suggestion-item__add-btn").forEach(n=>{n.classList.remove("selected")}),document.querySelectorAll(".suggestion-item--section").forEach(n=>{n.classList.remove("selected")}),this.selectedSuggestions.clear(),this.updateActionButtons()}async applySuggestions(){if(console.log("=== APPLY SUGGESTIONS CALLED ==="),console.log("Selected suggestions:",Array.from(this.selectedSuggestions)),this.selectedSuggestions.size===0){console.warn("No suggestions selected");return}const t=Array.from(this.selectedSuggestions);sessionStorage.setItem("selectedSuggestions",JSON.stringify(t)),console.log("Stored in sessionStorage:",t),this.showSuccessFeedback(),setTimeout(()=>{console.log("Navigating to expansion page...");try{window.location.assign("./section-expansion.html")}catch(e){console.error("Navigation failed, trying alternative:",e),window.location.replace("./section-expansion.html")}},500)}showSuccessFeedback(){const t=this.selectedSuggestions.size,e=document.createElement("div");e.className="success-feedback",e.textContent=`✓ ${t} suggestion${t===1?"":"s"} will be applied!`,document.body.appendChild(e),setTimeout(()=>{e.remove()},3e3)}}document.addEventListener("DOMContentLoaded",()=>{console.log("=== INITIALIZING SUGGESTIONS PAGE ===");const c=new r;try{window.suggestionsManager=c}catch{}c.initializeEventListeners()});
